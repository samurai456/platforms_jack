class Graphics {
    function void movePlatformToLeft(int tlx, int tly, int brx, int bry) {
        /* Draws leftmost blocks and wipes brx+1 located blocks */
        var int screenMemAddr, y, location;
        let screenMemAddr = 16384;      // First 16 pixels of screen

        if ((tlx > -1) & (tlx < 32)) {        // make leftmost blocs black
            let y = tly;                    
            let location = screenMemAddr + (tly * 32) + tlx;

            while (y < (bry + 1)) {         // y <= bry
                do Memory.poke(location, -1);
                let y = y + 1;
                let location = location + 32;
            }
        }

        if ((brx > -2) & (brx < 31)) {       // wipe previous rightmost blocks
            let y = tly;                    
            let location = screenMemAddr + (tly * 32) + brx;

            while (y < (bry + 1)) {
                do Memory.poke(location + 1, 0);  // location + 1 , becourse wiping previous blocks
                let y = y + 1;
                let location = location + 32;
            }
        }

        return;
    }
    function void moveRectangleUp(int tlx, int tly, int brx, int bry) {
        /* Draws topmost blocks and wipes bry+1 located blocks */
        var int screenMemAddr, x, location;
        let screenMemAddr = 16384;          // First 16 pixels of screen

        if (tly > -1) {                     // Draw topmost pixels of rectangle
            let x = tlx;
            let location = screenMemAddr + (tly * 32) + tlx;

            while (x < (brx + 1)) {
                do Memory.poke(location, -1);
                let x = x + 1;
                let location = location + 1;
            }
        }

        if (bry > -2) {                     // Wipe previous bottommost pixels of rectangle
            let x = tlx;
            let location = screenMemAddr + (bry * 32) + tlx;

            while (x < (brx + 1)) {
                do Memory.poke(location + 32, 0);  // location + 32, becourse wiping previous blocks
                let x = x + 1;
                let location = location + 1;
            }
        }

        return;
    }
    function void moveRectangleDown(int tlx, int tly, int brx, int bry) {
        return;
    }
}
