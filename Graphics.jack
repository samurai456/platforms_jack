class Graphics {
    function void movePlatformToLeft(int tlx, int tly, int brx, int bry) {
        /* Draws leftmost blocks and wipes brx+1 located blocks */
        var int screenMemAddr, y, location;
        let screenMemAddr = 16384;      // First 16 pixels of screen

        if ((tlx > -1) & (tlx < 32)) {        // make leftmost blocs black
            let y = tly;                    
            let location = screenMemAddr + (tly * 32) + tlx;

            while (y < (bry + 1)) {         // y <= bry
                do Memory.poke(location, -1);
                let y = y + 1;
                let location = location + 32;
            }
        }

        if ((brx > -2) & (brx < 31)) {       // wipe previous rightmost blocks
            let y = tly;                    
            let location = screenMemAddr + (tly * 32) + brx;

            while (y < (bry + 1)) {
                do Memory.poke(location + 1, 0);  // location + 1 , becourse wiping previous blocks
                let y = y + 1;
                let location = location + 32;
            }
        }

        return;
    }
    function void moveRectangleUp(int tlx, int tly, int brx, int bry, int rows) {
        /* Draws topmost blocks and wipes bry+1 located blocks */
        var int y;

        let y = tly + rows - 1;
        do Graphics.drawRectangle(tlx, tly, brx, y, -1);

        let y = bry + rows;
        do Graphics.drawRectangle(tlx, bry + 1, brx, y, 0);

        return;
    }
    function void moveRectangleDown(int tlx, int tly, int brx, int bry, int rows) {
        /* Draws botommost blocks and wipes tly-1 located blocks */
        var int y;

        let y = bry - rows + 1;
        do Graphics.drawRectangle(tlx, y, brx, bry, -1);

        let y = tly - rows;
        do Graphics.drawRectangle(tlx, y, brx, tly - 1, 0);

        return;
    }
    function void drawRectangle(int tlx, int tly, int brx, int bry, int fillWith) {
        var int firstBlockAddr, lastBlockAddr, x, location, finalLocation;

        let tlx = Graphics.withinScreenX(tlx);       // Prevent drawing outside the screen
        let tly = Graphics.withinScreenY(tly);
        let brx = Graphics.withinScreenX(brx);
        let bry = Graphics.withinScreenY(bry);

        let firstBlockAddr = 16384;          // First 16 pixels of screen
        let lastBlockAddr = 24575;           // Last 16 pixels of screen

        let x = tlx;
        let location = firstBlockAddr + (tly * 32) + tlx;
        let finalLocation = firstBlockAddr + (bry * 32) + brx;

        while (location < (finalLocation + 1)) {
            if (location > (firstBlockAddr - 1) & 
                    location < (lastBlockAddr + 1)) {
                do Memory.poke(location, fillWith);
            }
            
            let x = x + 1;
            
            if (x > brx) {                              // To the next row
                let x = tlx;
                let location = (location + 32) - (brx - tlx); 
            } else {
                let location = location + 1;
            }
        }
        
        return;
    }
    function int withinScreenX(int x) {
        if (x > 31) {
            return 31;
        }

        if (x < 0) {
            return 0;
        } 

        return x;
    }
    function int withinScreenY(int y) {
        if (y > 255) {
            return 255;
        }

        if (y < 0) {
            return 0;
        } 

        return y;
    }
}
