class Rectangle {
    field boolean gravity;
    field boolean move;
    field int speed;

    field int tlx;
    field int tly;
    field int brx;
    field int bry;

    constructor Rectangle new(int tlx0, int tly0, int brx0, int bry0) {
        let tlx = tlx0;
        let tly = tly0;
        let brx = brx0;
        let bry = bry0;

        let move = false;
        let gravity = false;
        let speed = 7;

        return this;
    }
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }
    method void startMove() {
        let move = true;
        return;
    }
    method void stopMove() {
        let move = false;
        return;
    }
    method void reverseGravity() {
        let gravity = ~gravity;
        return;
    }
    method boolean platformTouch(Platform pl) {
        if ((pl.getTlx() < (brx + 1)) & 
                (pl.getBrx() > (tlx - 1))) {
            if (gravity) {
                if (pl.getTly() = (bry + 1)) {
                    return true;
                }
            } else {
                if (pl.getBry() = (tly - 1)) {
                    return true;
                }
            }
        }

        return false;
    }
    method void update(Platform pl0, Platform pl1, Platform pl2) {
        var int i, rows;
        let i = 0;
        let rows = 0;                   // How many rows should be updated is the screen
        while (i < speed) {
            if (platformTouch(pl0) | 
                    platformTouch(pl1) | 
                    platformTouch(pl2)) {
                do stopMove();
            } else {
                do startMove();
                if (gravity) {
                    let tly = tly + 1;
                    let bry = bry + 1;
                } else {
                    let tly = tly - 1;
                    let bry = bry - 1;
                }

                let rows = rows + 1;
            }

            let i = i + 1;
        }

        if (gravity) {
            do Graphics.moveRectangleDown(tlx, tly, brx, bry, rows);
        } else {
            do Graphics.moveRectangleUp(tlx, tly, brx, bry, rows);
        }

        if (~move & Keyboard.keyPressed() = 106) {
            do reverseGravity();
            do startMove();
        }

        return;
    }
}
